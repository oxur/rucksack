name: CI/CD

on:
  workflow_dispatch:
  push:
  pull_request:
  schedule:
  - cron: "20 4 * * *"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Get Updates
      run: make deps
    - name: Build
      run: make build
    - name: Lint
      run: make lint
    - name: Run tests
      run: make test
    - name: Run rucksack (locally)
      run: |
        ./bin/rucksack help
        ./bin/rucksack gen --type uuid++ --encode
        ./bin/rucksack show config-file
        ./bin/rucksack show config
        ./bin/rucksack show data-dir
        ./bin/rucksack show db-file
        ./bin/rucksack add --db-pass 1234 --url http://example.com --user shelly --password whyyyyyy
        ./bin/rucksack list --db-pass 1234
        ./bin/rucksack set --db-pass 1234 user --url http://example.com --old-user shelly --new-user clammy
        ./bin/rucksack list --db-pass 1234
        ./bin/rucksack list --db-pass 1234 --decrypt
        ./bin/rucksack add --db-pass 1234 --url http://boo.co --user sully --password numb3r1fan
        ./bin/rucksack list --db-pass 1234 --decrypt --reveal
        ./bin/rucksack list --db-pass 1234 --decrypt  --reveal --filter exa
        ./bin/rucksack list --db-pass 1234 --decrypt  --reveal --filter boo
    - name: Install rucksack (crates.io)
      run: cargo install rucksack
    - name: Run rucksack
      run: |
        rucksack help
        rucksack gen --type uuid++ --encode
        rucksack add --db-pass 1234 --url http://example.com --user shelly --password whyyyyyy
        rucksack list --db-pass 1234
        rucksack set --db-pass 1234 user --url http://example.com --old-user shelly --new-user clammy
        rucksack list --db-pass 1234
        rucksack list --db-pass 1234 --decrypt
        rucksack add --db-pass 1234 --url http://boo.co --user sully --password numb3r1fan
        rucksack list --db-pass 1234 --decrypt --reveal
        rucksack list --db-pass 1234 --decrypt  --reveal --filter exa
        rucksack list --db-pass 1234 --decrypt  --reveal --filter boo
    - name: Notify CI/CD Slack Channel
      uses: innocarpe/actions-slack@v1
      with:
        status: ${{ job.status }}
        success_text: '✅ Build for ${{ github.repository }} succeeded! 😄🌈🐴🚢🐿 (commit id: ${{ github.sha }})'
        failure_text: '❌ Build for ${{ github.repository }} failed! 🤬💣🔥🚒 (commit id: ${{ github.sha }})'
        cancelled_text: '🚧 Build for ${{ github.repository }} was cancelled ... 😯🦡 (commit id: ${{ github.sha }})'
      env:
        GITHUB_TOKEN: ${{ secrets.CICD_BOT_TOKEN }}
        SLACK_WEBHOOK_URL: ${{ secrets.CICD_BOT_WEBHOOK }}
      if: always()
